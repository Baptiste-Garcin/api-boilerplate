{"version":3,"sources":["webpack:///webpack/bootstrap 0dafdfefddb2461e30f3","webpack:///./app.js","webpack:///external \"express\"","webpack:///./bin/www","webpack:///external \"morgan\"","webpack:///external \"cookie-parser\"","webpack:///external \"body-parser\"","webpack:///./routes/index.js","webpack:///./bin/serverUtil.js","webpack:///external \"http\"","webpack:///external \"debug\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wEAA+B,kBAAkB;AACjD;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpCA,oC;;;;;;;;;ACAA;AAAA;AACA;AACA;;AAEA;AACsD;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA,mC;;;;;;ACAA,0C;;;;;;ACAA,wC;;;;;;;;;ACAA;;AAEA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B,CAAC;;AAED;;;;;;;;;;;;;;;;ACTA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,UAAU;AACxB,0BAA0B,KAAK;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,KAAK;;AAEnB;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtEA,iC;;;;;;ACAA,kC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0dafdfefddb2461e30f3","import express from 'express';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport index from './routes/index';\n\nconst app = express();\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n\napp.use('/', index);\n\napp.get('/favicon.ico', (req, res) => res.status(204));\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nexport default app;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 0\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nimport app from '../app';\nimport { normalizePort, onError, onListening, server } from './serverUtil';\n\n/**\n * Get port from environment and store in Express.\n */\n\nconst port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./bin/www\n// module id = 2\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","import express from 'express';\n\nconst router = express.Router();\n\n/* GET home page. */\nrouter.get('/', (req, res) => {\n  res.json({ success: 'true' });\n});\n\nexport default router;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/index.js\n// module id = 6\n// module chunks = 0","import http from 'http';\nimport debugPackage from 'debug';\nimport app from '../app';\n\nconst debug = debugPackage('tourismatik:server');\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nexport function normalizePort(val) {\n  const normalizedport = parseInt(val, 10);\n\n  if (isNaN(normalizedport)) {\n    // named pipe\n    return val;\n  }\n\n  if (normalizedport >= 0) {\n    // port number\n    return normalizedport;\n  }\n\n  return false;\n}\n\n/**\n * Create HTTP server.\n */\n\nexport const server = http.createServer(app);\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nexport function onListening() {\n  const addr = server.address();\n  const bind = typeof addr === 'string'\n    ? `pipe ${addr}`\n    : `pipe ${addr.port}`;\n  debug(`Listening on + ${bind}`);\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nexport function onError(error) {\n  const port = normalizePort(process.env.PORT || '3000');\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n  const bind = typeof port === 'string'\n    ? `Pipe ${port}`\n    : `Port ${port}`;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(`${bind} requires elevated privileges`);\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(`${bind} is already in use`);\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./bin/serverUtil.js\n// module id = 7\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}